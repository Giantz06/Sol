#include <bits/stdc++.h>

using namespace std;
int root[100005];
int findroot(int u){
    if(u==root[u]) return u;
    int r = findroot(root[u]);
    root[u] = r;
    return r;
}
vector<pair<int, pair<int,int>>> edge;


int n,m;
int main()
{
    cin>>n>>m;
    for(int i = 1;i<=n;i++) root[i] = i;
    for(int i = 0;i<m;i++){
        int a,b,w;
        cin>>a>>b>>w;
        edge.push_back(make_pair(w, make_pair(a,b)));

    }
    long long ans = 0;
    int cnt = 0;
    sort(edge.begin(),edge.end());
    for(int i = 0;i<edge.size();i++){
        int u = edge[i].second.first;
        int v = edge[i].second.second;
        int ru = findroot(u); int rv = findroot(v);
        if(ru!=rv){
            ans+=1ll*edge[i].first;
            root[ru] = rv;
            ++cnt;
        }
    }
    if(cnt == n-1) cout<<ans;
    else cout<<"IMPOSSIBLE";
    return 0;
}
