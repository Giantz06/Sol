#include <bits/stdc++.h>
using namespace std;

int a[111][111];
int dx[4] = {-1, 0, 1, 0};
int dy[4] = {0, 1, 0, -1};
bool c[111][111];

int main(){
    int n;
    cin >> n;
    for(int i = 0; i < n; i++)
        for(int j = 0; j < n; j++)
            cin >> a[i][j];

    int l = 0, r = 200, ans = 200;
    while (l <= r) {
        int m = (l + r) / 2;

        bool ok = false;
        for (int low = 0; low <= 200 - m; ++low) {
            int high = low + m;
            if (a[0][0] < low || a[0][0] > high) continue;

            // Reset visited
            for (int i = 0; i < n; ++i)
                for (int j = 0; j < n; ++j)
                    c[i][j] = false;

            queue<pair<int, int>> q;
            q.emplace(0, 0);
            c[0][0] = true;

            while (!q.empty()) {
                auto [x, y] = q.front(); q.pop();
                for (int i = 0; i < 4; i++) {
                    int xx = x + dx[i], yy = y + dy[i];
                    if (xx >= 0 && yy >= 0 && xx < n && yy < n && !c[xx][yy]) {
                        if (a[xx][yy] >= low && a[xx][yy] <= high) {
                            c[xx][yy] = true;
                            q.emplace(xx, yy);
                        }
                    }
                }
            }

            if (c[n-1][n-1]) {
                ok = true;
                break;
            }
        }

        if (ok) {
            ans = m;
            r = m - 1;
        } else {
            l = m + 1;
        }
    }

    cout << ans << endl;
    return 0;
}
