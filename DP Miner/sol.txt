#include <iostream>
#include <math.h>
using namespace std;
const int inf = -10000007;
int n;
int ship[100040];
int f[100005][4][4][4]; 
int cal(int a, int b, int c)
{
  int res = 0;
  if (a == 1 || b == 1 || c == 1)
    res++;
  if (a == 2 || b == 2 || c == 2)
    res++;
  if (a == 3 || b == 3 || c == 3)
    res++;
  return res;
}
int t(char a)
{
  if (a == 'F')
    return 1;
  else if (a == 'M')
    return 2;
  else if (a == 'B')
    return 3;
  else
    return 0;
}
int main()
{
  cin >> n;
  for (int i = 1; i <= n; i++) {
    char c; 
    std::cin >> c; 
    if (c == 'M') {
      ship[i] = 1; 
    }
    else if (c == 'F') {
      ship[i] = 2; 
    }
    else {
      ship[i] = 3; 
    }
  }
  for(int i = 0;i<=n;i++){
    for(int a = 0;a<4;a++){
      for(int b = 0;b<4;b++){
        for(int c = 0;c<4;c++) f[i][a][b][c] = -1;
      }
    }
  }
  f[0][0][0][0] = 0;
  for(int i = 0;i<=n;i++){
    for(int a = 0;a<4;a++){
      for(int b = 0;b<4;b++){
        for(int c = 0;c<4;c++){
          if(f[i][a][b][c] == -1) continue;
          f[i+1][ship[i]][b][c] = max(f[i+1][ship[i]][b][c],f[i][a][b][c] + cal(ship[i],ship[i+1],a));
          f[i+1][c][a][ship[i]] = max(f[i][a][b][c] + cal(c,ship[i+1],b),f[i+1][c][a][ship[i]]);
        }
      }
    }
  }
  int ans = -1;
  for(int a = 0;a<4;a++){
    for(int b = 0;b<4;b++){
      for(int c = 0;c<4;c++) ans = max(ans,f[n][a][b][c]);
    }
  }
  cout<<ans;
  return 0;
}